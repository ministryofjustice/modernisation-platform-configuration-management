---
# Note these tasks can also be used elsewhere via import_role

- name: Include uid and gid vars
  ansible.builtin.include_vars:
    dir: vars
    files_matching: "{{ item }}-system-.*.yml$"
  loop: "{{ users_and_groups_system_vars_prefixes }}"

- name: Calculate list of groups
  ansible.builtin.set_fact:
    all_system_groups: >- # Jinja 2 multi-line string
      {{ 
        (
          users_and_groups_system | map(attribute='group') | list
        ) + (
          users_and_groups_system | selectattr('groups', 'defined') | map(attribute='groups') | flatten | list
        ) | unique 
      }}

- name: Add system groups
  ansible.builtin.group:
    name: "{{ item }}"
    state: present
    system: yes
    gid: "{{ (users_and_groups_system | selectattr('group', 'equalto', item) | map(attribute='gid') | first | default(system_gids[item] | default(omit))) }}"
  loop: "{{ all_system_groups }}"

- name: Add system users
  ansible.builtin.user:
    name: "{{ item.name }}"
    group: "{{ item.group }}"
    groups: "{{ item.groups | default([]) }}"
    uid: "{{ item.uid | default(system_uids[item.name]|default(omit)) }}"
    create_home: "{{ item.create_home | default(true) }}"
    home: "{{ item.home | default('/home/' + item.name) }}"
    system: yes
  loop: "{{ users_and_groups_system | selectattr('name', 'defined') }}"

- name: Touch system users .xAuthority
  ansible.builtin.file:
    path: "/home/{{ item.name }}/.Xauthority"
    state: touch
    mode: u+rw,g-rwx,o-rwx
    modification_time: preserve
    access_time: preserve
  loop: "{{ users_and_groups_system | selectattr('name', 'defined') | selectattr('create_xauthority', 'defined') | selectattr('create_xauthority', 'equalto', true) }}"
