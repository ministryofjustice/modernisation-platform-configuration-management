---
- name: Check Oracle BIP Software installed
  ansible.builtin.stat:
    path: ". {{ wl_home }}/server/bin/setWLSEnv.sh"
  register: BIP_software_installed

- block:

    # - name: Download software for Oracle BI Publisher cloning for Oasys 
    #   amazon.aws.aws_s3:
    #     bucket: "{{ image_builder_s3_bucket_name }}"
    #     object: "oasys-bip/bip_clone_software/{{ item }}"
    #     dest: "{{ stage}}/{{ item }}"
    #     mode: get
    #     overwrite: latest
    #   loop:
    #     - bi_config_copy.jar
    #     - bi_mw_copy_binary.jar
    #     - cloningclient.jar
    #     - nm.jar
    #     - bip_repository_12Oct2023.tar
    #     - pasteBinary.sh
    #   when: image_builder_s3_bucket_name is defined

    # - name: Change file ownership, group and permissions
    #   ansible.builtin.file:
    #     path: "{{ item }}"
    #     owner: oracle
    #     group: oinstall 
    #     mode: '0700'
    #   loop:
    #     - "{{ stage }}/pasteBinary.sh"
    #     - "{{ stage }}/cloningclient.jar"

    # - name: Create stage directory for moveplan 
    #   ansible.builtin.file:
    #     path: "{{ item }}"
    #     state: directory
    #     owner: oracle
    #     group: oinstall
    #     mode: "0755"
    #   loop:
    #     - "{{ stage }}/nm"
    #     - "{{ stage }}/bi_config"
    #     - "{{ stage }}/logs"

    - name: Copy BIP plans for config and nodemanager 
      ansible.builtin.template:
        src: "{{ item }}_moveplan.xml"
        dest: "{{ stage }}/{{ item }}/moveplan.xml"
        owner: oracle
        group: oinstall
        mode: "0700"
      loop:
        - nm
        - bi_config

    - name: Copy script templates to obfuscate password and to add Privileges for Application Roles
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ stage }}/{{ item }}"
        owner: oracle
        group: oinstall
        mode: "0700"
      loop:
        - obfuscatePassword.exp
        - addBIPCodeGrants.py 
        - bip_paste_binary.sh

    # - name: Copy oraInst.loc 
    #   ansible.builtin.template:
    #     src: "oraInst.loc.j2"
    #     dest: "/etc/oraInst.loc"
    #     owner: root
    #     group: root
    #     mode: "0755"

    - name: Oracle BI Publisher paste binary from jar file 
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          echo "# pasteBinary.sh "
          # {{ stage }}/pasteBinary.sh -javaHome /usr/java/jdk1.7.0_80 -archiveLoc {{ stage }}/bi_mw_copy_binary.jar -targetMWHomeLoc {{ middleware_home }} -invPtrLoc /etc/oraInst.loc -logDirLoc {{ stage  }}/logs -executeSysPrereqs false
          {{ stage }}/bip_paste_binary.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-bip
      async: 86400
      poll: 10
      when: not ansible_check_mode

    - name: Execute oracleRoot.sh as root 
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
            echo "# oracleRoot.sh "
            {{ middleware_home }}/Oracle_BI1/oracleRoot.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-bip
      async: 86400
      poll: 60
      when: not ansible_check_mode

    - name: Collect file details for cleanup from nodemanager
      ansible.builtin.find:
        path: "{{ wl_home }}/common/nodemanager/"
        hidden: True
      register: collected_files

    - name: remove collected files from nodemenager directory
      ansible.builtin.file:
        path: "{{ item.path }}"
        state: absent
      with_items: >
        {{
          collected_files.files
        }}

    - name: Generate obfuscate password files for OMS_MDS
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          export CONFIG_JVM_ARGS="-Xmx2048M -Xms2048M"
          echo "# Create obfuscated password file for OAS_MDS "
          {{ stage }}/obfuscatePassword.exp  {{ bipdb_mds_password }} oas_mds_password.txt
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-bip

    - name: Generate obfuscate password files for OAS_BIPLATFORM
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          export CONFIG_JVM_ARGS="-Xmx2048M -Xms2048M"
          echo "# Create obfuscated password file for OAS_BIPLATFORM "
          {{ stage }}/obfuscatePassword.exp  {{ bipdb_biplatform_password }} {{ oas_biplatform_password_file }}
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-bip

    - name: Generate obfuscate password files for weblogic
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          export CONFIG_JVM_ARGS="-Xmx2048M -Xms2048M"
          echo "# Create obfuscated password file for WEBLOGIC  "
          {{ stage }}/obfuscatePassword.exp  {{ weblogic_admin_password }} {{ weblogic_password_file }}
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-bip

    # - name: Oracle BIP config cloning
    #   become_user: oracle
    #   ansible.builtin.shell: |
    #     set -eo pipefail
    #     main() {
    #         {{ middleware_home }}/oracle_common/bin/pasteConfig.sh \
    #           -javaHome /usr/java/jdk1.7.0_80 \
    #           -archiveLoc {{ stage }}/bi_config_copy.jar \
    #           -targetDomainLoc {{ domain_home }}/{{ domain_name }} \
    #           -targetMWHomeLoc {{ middleware_home }} \
    #           -domainAdminPasswordFile {{ stage }}password.txt \
    #           -movePlanLoc {{ stage }}/bi_config/moveplan.xml
    #     }
    #     main 2>&1 | logger -p local3.info -t ansible-oracle-bip
    #   async: 86400
    #   poll: 60
    #   when: not ansible_check_mode

    # - name: Oracle BIP NodeManager config cloning 
    #   become_user: oracle
    #   ansible.builtin.shell: |
    #     set -eo pipefail
    #     main() {
    #         {{ middleware_home }}/oracle_common/bin/pasteConfig.sh \
    #           -javaHome /usr/java/jdk1.7.0_80 \
    #           -archiveLoc {{ stage }}/nm.jar \
    #           -targetNMHomeLoc {{ wl_home }}/common/nodemanager \
    #           -targetMWHomeLoc {{ middleware_home }} \
    #           -movePlanLoc {{ stage }}/nm/moveplan.xml \
    #           -silent true
    #     }
    #     main 2>&1 | logger -p local3.info -t ansible-oracle-bip
    #   async: 86400
    #   poll: 60
    #   when: not ansible_check_mode

    # - name: Enable Standalone BI Publisher to Add Privileges for Application Roles
    #   become_user: oracle
    #   ansible.builtin.shell: |
    #     set -eo pipefail
    #     main() {
    #         . {{ wl_home }}/server/bin/setWLSEnv.sh
    #         {{ middleware_home }}/oracle_common/common/bin/wlst.sh \
    #         {{ stage }}/add_BIP_code_grants.py \
    #         t3://{{ weblogic_servername }}:7001 weblogic
    #     }
    #     main 2>&1 | logger -p local3.info -t ansible-oracle-bip
    #   when: not ansible_check_mode

  # block
  when: not BIP_software_installed.stat.exists
