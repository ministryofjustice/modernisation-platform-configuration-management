---
# Some configs rely on whether collectd is installed or not
- name: Check if collectd has been installed 
  ansible.builtin.shell: |
    check_installed() {
      check="$(rpm -qa | grep collectd)"
      if [[ $check ]]
      then 
        return 0
      else 
        return 1
      fi
    }
    check_installed
  ignore_errors: true
  register: collectd_installed

- name: Create amazon-cloudwatch-agent config directory
  ansible.builtin.file:
    path: "{{ amazon_cloudwatch_agent_config_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Get tag values for use in config file
  set_fact:
    name: "{{ ec2.tags.Name }}"
    server_type: "{{ ec2.tags['server-type'] }}"
    instance_id: "{{ ansible_ec2_instance_id }}"
    weblogic_log_path: "{{ weblogic_log_path if ec2.tags['server-type'] == 'nomis-web' else '' }}"

# default cloudwatch-agent config file based on OS type (linux or windows)
# NOTE: windows default config doesn't exist yet
- name: Create OS specific amazon-cloudwatch-agent config file 
  ansible.builtin.template:
    src: "{{ ansible_system|lower }}.json.j2"
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_config_file }}"
    owner: root
    group: root
    mode: 0755

- name: Create amazon-cloudwatch-agent config file for collectd
  ansible.builtin.template:
    src: agent_config_collectd.json.j2
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_collectd_config_file }}"
    owner: root
    group: root
    mode: 0755
  when: collectd_installed.rc == 0

# - name: Create amazon-cloudwatch-agent config file for weblogic
#   ansible.builtin.template:
#     src: agent_config_weblogic.json.j2
#     dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_weblogic_config_file }}"
#     owner: root
#     group: root
#     mode: 0755
#   when: ec2.tags['server-type'] == 'nomis-web'

# - name: get list of additional config files for cloudwatch-agent
#   set_fact:
#     _found_file: "{{ lookup('ansible.builtin.first_found', item, skip=True ) }} "
#     configs: "{{ metric_configs|replace('-', '_') }}"

# ignores errors as the config file may not exist for cloudwatch but may do for collectd
- name: template config files per value of metric_configs
  ansible.builtin.template:
    src: "{{ lookup('ansible.builtin.first_found', params) }}"
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ item }}.json"
    owner: root
    group: root
    mode: 0755
  vars:
    params: 
      files: 
        - "{{ item }}"
      paths:
        - 'templates'
      skip: True
  loop: "{{ metric_configs|replace('-', '_') }}"
  # loop: "{{ metric_configs|replace('-', '_') }}"
