---
# Some configs rely on whether collectd is installed or not
- name: Check if collectd has been installed
  ansible.builtin.shell: |
    check_installed() {
      check="$(rpm -qa | grep collectd)"
      if [[ $check ]]
      then 
        return 0
      else 
        return 1
      fi
    }
    check_installed
  ignore_errors: true
  register: collectd_installed

- name: Create amazon-cloudwatch-agent config directory
  ansible.builtin.file:
    path: "{{ amazon_cloudwatch_agent_config_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

- name: Get tag values for use in config file
  set_fact:
    name: "{{ ec2.tags.Name }}"
    server_type: "{{ ec2.tags['server-type'] }}"
    instance_id: "{{ ansible_ec2_instance_id }}"
    weblogic_log_path: "{{ weblogic_log_path if ec2.tags['server-type'] == 'nomis-web' else '' }}"

# default cloudwatch-agent config file based on OS type (linux or windows)
# NOTE: windows default config doesn't exist yet
- name: Create OS specific amazon-cloudwatch-agent config file
  ansible.builtin.template:
    src: "{{ ansible_system|lower }}.json.j2"
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_config_file }}"
    owner: root
    group: root
    mode: 0755

- name: Create amazon-cloudwatch-agent config file for collectd
  ansible.builtin.template:
    src: agent_config_collectd.json.j2
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_collectd_config_file }}"
    owner: root
    group: root
    mode: 0755
  when: collectd_installed.rc == 0

- name: check if there are template files exist for each value of metric_configs
  delegate_to: localhost
  ansible.builtin.stat:
    path: "{{ role_path }}/templates/{{ item }}.json.j2"
  register: template_files
  loop: "{{ metric_configs|replace('-', '_') }}"
  loop_control:
    loop_var: item
  when: metric_configs is defined

- name: template config files that exist
  ansible.builtin.template:
    src: "{{ item }}.json.j2"
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ item }}.json"
    owner: root
    group: root
    mode: 0755
  loop: "{{ template_files.results|json_query('[*].item') if template_files.results is defined else [] }}"
  loop_control:
    label: item
  register: template_config_files
