---
- name: check if amazon-cloudwatch-agent installed
  ansible.builtin.shell: |
    check_installed() {
      check="$(amazon-cloudwatch-agent-ctl -m ec2 -a status)"
      if [[ $check ]]
      then 
        return 0
      else 
        return 1
      fi
    }
    check_installed
  ignore_errors: true
  register: agent_installed

- name: Install amazon-cloudwatch-agent
  ansible.builtin.yum:
    name: "{{ amazon_cloudwatch_agent_package }}"
  when: agent_installed is failed

- name: Create amazon-cloudwatch-agent config directory
  ansible.builtin.file:
    path: "{{ amazon_cloudwatch_agent_config_path }}"
    state: directory
    owner: root
    group: root
    mode: 0755

# Set up Cloudwatch config and start Cloudwatch agent

- name: Get tag values for use in config file
  set_fact:
    name: "{{ ec2.tags.Name }}"
    server_type: "{{ ec2.tags['server-type'] }}"
    instance_id: "{{ ansible_ec2_instance_id }}"

- name: Create amazon-cloudwatch-agent config file
  ansible.builtin.template:
    src: agent_config_linux.json.j2
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_config_file }}"
    owner: root
    group: root
    mode: 0755

- name: Create amazon-cloudwatch-agent config file for collectd
  ansible.builtin.template:
    src: agent_config_collectd.json.j2
    dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_collectd_config_file }}"
    owner: root
    group: root
    mode: 0755

- name: Set up amazon-cloudwatch-agent weblogic log scraping
  block:
    - name: set fact
      set_fact:
        weblogic_log_path: "{{ weblogic_log_path }}"

    - name: Create amazon-cloudwatch-agent config file for weblogic
      ansible.builtin.template:
        src: agent_config_weblogic.json.j2
        dest: "{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_weblogic_config_file }}"
        owner: root
        group: root
        mode: 0755

  when: ec2.tags['server-type'] == 'nomis-web'

# covers cloudwatch agent start for linux (common) and oracle EC2 instances
- name: Start amazon-cloudwatch-agent service
  ansible.builtin.shell: |
    /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a fetch-config -m ec2 -s -c file:"{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_config_file }}"

- name: Append settings for collectd to amazon-cloudwatch-agent config file
  ansible.builtin.shell: |
    /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a append-config -m ec2 -s -c file:"{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_collectd_config_file }}"

# additional settings for weblogic EC2 instances
- name: Append settings for amazon-cloudwatch-agent for weblogic EC2 instances
  ansible.builtin.shell: |
    /opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -a append-config -m ec2 -s -c file:"{{ amazon_cloudwatch_agent_config_path }}/{{ amazon_cloudwatch_agent_weblogic_config_file }}"
  when: ec2.tags['server-type'] == 'nomis-web'
