---

- name: Setup Primary database for HA 
  block:
    - name: Copy setup files for execution 
      template:
        src: "{{ item }}.j2"
        dest: "{{ stage }}/{{ item }}"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"
      loop:
        - "add_tns_entry.sh"
        - "add_lsnr_static_services.sh"
        - "setup_primary_for_ha.sh"

    - name: Check database password file exists 
      stat:
        path: "{{ database_home }}/dbs/orapw{{ primary_database }}"
      register: password_file
    
    - name: Create password file if it does not exists 
      ansible.builtin.shell: |
        source oraenv <<< {{ primary_database }}
        orapwd file="{{ database_home }}/dbs/orapw{{ primary_database }}" password=KJTgfda4i168 entries=10
      when: not password_file.stat.exists

    - name: Setup Primary Database for new standby
      shell: "{{ stage }}/setup_primary_for_ha.sh -t {{ primary_uniq_name }} -s {{ standby_uniq_name }}"
      become: true
      become_user: "{{ oracle_install_user }}"
      register: param_result
      failed_when: param_result.rc != 0

    - name: Setup Listener service 
      shell: "{{ stage }}/add_lsnr_static_services.sh {{ global_database_name }} {{ primary_database }} {{ database_home }}"
      become: true
      become_user: "{{ oracle_install_user }}"
      register: param_result
      failed_when: param_result.rc != 0
      
    - name: Add TNS entry for primary 
      shell: "{{ stage }}/add_tns_entry.sh {{ database_home }} {{ primary_database }} {{ primary_host }} {{ db_port }} {{ primary_uniq_name }}"
      register: param_result
      failed_when: param_result.rc != 0

    - name: Add TNS entry for standby
      shell: "{{ stage }}/add_tns_entry.sh {{ database_home }} {{ standby_database }} {{ standby_host }} {{ db_port }} {{ standby_uniq_name }}"
      become: true
      become_user: "{{ oracle_install_user }}"
      register: param_result
      failed_when: param_result.rc != 0
      
  become: true
  become_user: "{{ oracle_install_user }}"
  environment: "{{ db_env }}"