---
- name: Download backup
  block:
  - name: Set backup directory fact
    set_fact:
      adhoc_backup_dir: "{{ rman_backup_location }}/adhoc/{{ db_primary.db_name }}/{{ adhoc_backup_label }}"
      adhoc_cloud_dir: "adhoc/{{ db_primary.db_name }}/{{ adhoc_backup_label }}"

  - name: Create directories
    ansible.builtin.file:
      path: "{{ item }}"
      owner: oracle
      group: oinstall
      mode: u=rwx,g=rxs,o=rx
      state: directory
      recurse: yes
    loop:
      - "{{ adhoc_backup_dir }}"

  - name: Download backup from S3 bucket backup
    ansible.builtin.shell: |
      set -eo pipefail
      main() {
        echo "# aws s3 sync s3://{{ db_primary.s3_bucket }}/{{ adhoc_cloud_dir }} {{ adhoc_backup_dir }}"
        aws s3 sync s3://{{ db_primary.s3_bucket }}/{{ adhoc_cloud_dir }} {{ adhoc_backup_dir }}
      }
      main 2>&1 | logger -p local3.info -t ansible-oracle-db
    async: 7200
    poll: 20
    become_user: oracle
    when: db_primary.s3_bucket is defined and not ansible_check_mode

  - name: Download backup from Azure Storage Account
    ansible.builtin.shell: |
      set -eo pipefail
      main() {
        echo "# azcopy cp https://{{ db_primary.storage_account_name }}.blob.core.windows.net/{{ adhoc_cloud_dir }}/* {{ adhoc_backup_dir }}"
        azcopy cp \
         "https://{{ db_primary.storage_account_name }}.blob.core.windows.net/{{ adhoc_cloud_dir }}/*?{{ sas_token }}" \
         "{{ adhoc_backup_dir }}" \
         --overwrite=ifSourceNewer --recursive
      }
      main 2>&1 | logger -p local3.info -t ansible-oracle-db
    async: 7200
    poll: 20
    become_user: oracle
    when: db_primary.storage_account_name is defined and not ansible_check_mode

  - name: Copy password file
    ansible.builtin.shell: |
      set -eo pipefail
      main() {
        echo "# cp {{ adhoc_backup_dir }}/orapw{{ db_primary.db_name }} {{ database_home }}/dbs/orapw{{ db_standby.instance_name }}"
        cp "{{ adhoc_backup_dir }}/orapw{{ db_primary.db_name }}" "{{ database_home }}/dbs/orapw{{ db_standby.instance_name }}"
        chmod 0640 "{{ database_home }}/dbs/orapw{{ db_standby.instance_name }}"
      }
      main 2>&1 | logger -p local3.info -t ansible-oracle-db
    become_user: oracle

  # block
  when: adhoc_backup_label is defined
