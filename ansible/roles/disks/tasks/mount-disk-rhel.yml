---
- debug:
    msg: "Mounting ebs device {{ disk_mount.ebs_device_name }} {{ disk_mount.fstype }} {{ disk_mount.dir }}" 

- name: Fail if drive map missing
  fail:
    msg: "Missing linux drive mapping, ensure device exists on device"
  when: not ebs_to_linux_device_map[disk_mount.ebs_device_name] is defined

- name: Setting linux device name fact
  set_fact:
    linux_device_name: "{{ ebs_to_linux_device_map[disk_mount.ebs_device_name] + (disk_mount.partition|default('')) }}"
    resizefs: "{{ disk_mount.fstype in ['btrfs', 'ext2', 'ext3', 'ext4', 'ext4dev', 'f2fs', 'lvm', 'xfs', 'ufs', 'vfat'] }}"

- name: Create filesystem
  community.general.filesystem:
    fstype: "{{ disk_mount.fstype }}"
    dev: "{{ linux_device_name }}"
    resizefs: "{{ resizefs }}"

- name: Get UUID of device
  ansible.builtin.command: blkid -s UUID -o value {{ linux_device_name }}
  register: blkid
  check_mode: false
  changed_when: false
  failed_when: blkid.stdout|length == 0

- name: Mount device
  block:
  - name: Create mount point
    ansible.builtin.file:
      path: "{{ disk_mount.dir }}"
      state: "directory"

  - name: Mount
    ansible.posix.mount:
      path: "{{ disk_mount.dir }}"
      src: "UUID={{ blkid.stdout }}"
      fstype: "{{ disk_mount.fstype }}"
      opts: "{{ disk_mount.opts | default('defaults,nofail') }}"
      state: mounted

  # block
  when: disk_mount.dir != 'swap'

- name: Mount swap
  block:
  - name: Mount
    ansible.posix.mount:
      path: "{{ disk_mount.dir }}"
      src: "UUID={{ blkid.stdout }}"
      fstype: "{{ disk_mount.fstype }}"
      opts: "{{ disk_mount.opts | default('sw') }}"
      state: present

  # block
  when: disk_mount.dir == 'swap'
