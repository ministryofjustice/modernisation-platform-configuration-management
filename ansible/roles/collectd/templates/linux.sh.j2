#!/usr/bin/env bash

# Templated in from ansible
HOSTNAME="${HOSTNAME:-localhost}"
INTERVAL="{{ collectd_script_interval }}"
LINUX_SERVICE_LIST="{{ service_list_linux }}"

service_status() {
    local SERVICE="$1"
    {% if ansible_distribution in ['Redhat', 'OracleLinux'] and ansible_distribution_major_version == '6' %}
    # RHEL6 service check
    service_status=$(sudo service $SERVICE status | grep "running")
    if [[ $service_status ]]
    then
        return 0
    else
        return 1
    fi
    {% else %}
    systemctl is-active --quiet $SERVICE
    {% endif %}
}

amazon_ssm_agent_status() {
    {% if ansible_distribution in ['Redhat', 'OracleLinux'] and ansible_distribution_major_version == '6' %}
    # RHEL6 ssm agent service check
    ssm_agent=$(status amazon-ssm-agent | grep "running")
    if [[ $ssm_agent ]]
    then
        return 0
    else
        return 1
    fi
    {% else %}
    # RHEL7 ssm agent service check
    systemctl is-active --quiet amazon-ssm-agent
    {% endif %}
}

amazon_cloudwatch_agent_status() {
    agent_status=$(/opt/aws/amazon-cloudwatch-agent/bin/amazon-cloudwatch-agent-ctl -m ec2 -a status | grep "running")
    if [[ $agent_status ]]
    then
        return 0
    else
        return 1
    fi
}

while sleep "$INTERVAL"
do
    for service in ${LINUX_SERVICE_LIST}
    do
        service_status "$service" 
        status=$?

        service_name=${service//-/_}
        echo "PUTVAL $HOSTNAME/exec-$service_name/bool-$service_name interval=$INTERVAL N:$status"
    done

    amazon_ssm_agent_status
    ssmstatus=$?
    echo "PUTVAL $HOSTNAME/exec-ssm_agent_status/bool-ssm_agent_status interval=$INTERVAL N:$ssmstatus"

    amazon_cloudwatch_agent_status
    cwastatus=$?
    echo "PUTVAL $HOSTNAME/exec-cloudwatch_agent_status/bool-cloudwatch_agent_status interval=$INTERVAL N:$cwastatus"

done