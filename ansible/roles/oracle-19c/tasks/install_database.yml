---
- name: Check oracle 19c DB software installed
  ansible.builtin.stat:
    path: "{{ database_home }}/bin/sqlplus"
  register: db_software_installed

- name: Install Oracle 19c database software
  block:
    - name: create response file
      template:
        src: db_install.rsp.j2
        dest: "{{ stage }}/{{ database_response_file }}"
        mode: u=rw,g=r,o=r
        owner: oracle
        group: oinstall

    - name: Copy Oracle 19c Database install software from s3 bucket # this relies on the remote machine having correct IAM Role assigned
      ansible.builtin.command:
        cmd: /usr/local/bin/aws s3 cp s3://{{ s3_bucket_with_prefix }}/{{ item }} .
        creates: "{{ item }}"
        chdir: "{{ stage }}"
      loop:
        - "{{ db_software }}"
        - "{{ psu_patch }}"
        - "{{ opatch }}"

    - name: Unzip Oracle 19c db software
      become_user: oracle
      ansible.builtin.shell: unzip "{{ stage }}/{{ db_software }}" -d "{{ database_home }}"
      async: 7200
      poll: 60

    - name: Unzip psu patch software
      ansible.builtin.unarchive:
        src: "{{ stage }}/{{ psu_patch }}"
        dest: "{{ stage }}/psu"
        owner: oracle
        group: oinstall
        remote_src: yes

    - name: Upgrade OPatch on database home
      ansible.builtin.unarchive:
        src: "{{ stage }}/{{ opatch }}"
        dest: "{{ database_home }}"
        owner: oracle
        group: oinstall
        remote_src: yes

    - name: Install Oracle 19c db software and apply patches
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        . ~/.bash_profile
        export CV_ASSUME_DISTID=EL7
        main() {
          echo "# Installing Oracle 19c database Infrastructure"
          yes | "{{ database_home }}/runInstaller" -silent -waitforcompletion -ignorePrereqFailure -responseFile {{ stage }}/{{ database_response_file }} -applyRU "{{ stage }}/psu/34160854/34130714" -applyOneOffs "{{ stage }}/psu/34160854/34086870" || true
        }
        main 2>&1 | logger -p local3.info -t ansible-weblogic
      async: 7200
      poll: 60
      vars:
        ansible_remote_tmp: "{{ temp }}"

    - name: run post install root script
      ansible.builtin.command: "{{ database_home }}/root.sh"

    - name: Update run_user for the {{ oracle_externaljob_file }}
      replace:
        path: "{{ oracle_externaljob_rdbms_path }}/{{ oracle_externaljob_file }}"
        regexp: "run_user = nobody"
        replace: "run_user = oracle"

    - name: Update run_group for the {{ oracle_externaljob_file }}
      replace:
        path: "{{ oracle_externaljob_rdbms_path }}/{{ oracle_externaljob_file }}"
        regexp: "run_group = nobody"
        replace: "run_group = dba"

    - name: Clean up {{ stage }} directory
      ansible.builtin.file:
        path: "{{ stage }}/{{ item }}"
        state: absent
      loop: 
        - "{{ database_response_file }}"
        - "{{ db_software }}"
        - "{{ psu_patch }}"
        - "{{ opatch }}"
        - "{{ stage }}/psu"

  # block
  when: not db_software_installed.stat.exists
