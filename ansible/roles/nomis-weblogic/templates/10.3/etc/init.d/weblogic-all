#!/bin/bash
#
# weblogic-all        Startup script for all weblogic components
#
# chkconfig: - 85 15
# description: weblogic server

# Source function library.
. /etc/init.d/functions

start_parallel() {
  set -e
  echo $"Starting all weblogic processes: "
  [[ -x /etc/init.d/weblogic-node-manager ]] && /etc/init.d/weblogic-node-manager start
  [[ -x /etc/init.d/weblogic-server ]] &&  /etc/init.d/weblogic-server start

  managed_services=$(find /etc/init.d/ -name 'WLS*' | sort)
  echo -n $"Starting all WLS services in parallel: "
  i=0
  for managed_service in $managed_services; do
    $managed_service start > /dev/null 2>&1 &
    pids[i]=$!
    i=$((i + 1))
  done
  echo "PIDS ${pids[*]}"

  set +e
  i=0
  for managed_service in $managed_services; do
    key=$(echo "$managed_service" | cut -d/ -f4)
    echo -n $"Waiting for $key: PID=${pids[i]}"
    if ! wait ${pids[i]}; then
      echo_failure
      echo
      return 1
    fi
    echo_success
    echo
    i=$((i + 1))
  done
  set -e

  [[ -x /etc/init.d/opmn ]] && /etc/init.d/opmn start
}

start_sequential() {
  set -e
  echo $"Starting all weblogic processes: "
  [[ -x /etc/init.d/weblogic-node-manager ]] && /etc/init.d/weblogic-node-manager start
  [[ -x /etc/init.d/weblogic-server ]] &&  /etc/init.d/weblogic-server start
  managed_services=$(find /etc/init.d/ -name 'WLS*')
  for managed_service in $managed_services; do
    $managed_service start
  done
  [[ -x /etc/init.d/opmn ]] && /etc/init.d/opmn start
}

start() {
  start_parallel
}

stop() {
  echo $"Stopping all weblogic processes: "
  [[ -x /etc/init.d/opmn ]] && /etc/init.d/opmn stop
  managed_services=$(find /etc/init.d/ -name 'WLS*' | sort -r)
  for managed_service in $managed_services; do
    $managed_service stop
  done
  [[ -x /etc/init.d/weblogic-server ]] &&  /etc/init.d/weblogic-server stop
  [[ -x /etc/init.d/weblogic-node-manager ]] && /etc/init.d/weblogic-node-manager stop
  pkill -9 -u oracle frmweb
}

status() {
  RETVAL=0
  echo $"Status of all weblogic processes:"
  if [[ -x /etc/init.d/weblogic-node-manager ]]; then
    if ! /etc/init.d/weblogic-node-manager status; then
      RETVAL=1
    fi
  fi
  if [[ -x /etc/init.d/weblogic-server ]]; then
    if ! /etc/init.d/weblogic-server status; then
      RETVAL=1
    fi
  fi
  managed_services=$(find /etc/init.d/ -name 'WLS*')
  for managed_service in $managed_services; do
    if ! $managed_service status; then
      RETVAL=1
    fi
  done
  if [[ -x /etc/init.d/opmn ]]; then
    if ! /etc/init.d/opmn status; then
      RETVAL=1
    fi
  fi
  return $RETVAL
}

restart() {
  stop
  start
}


get_unhealthy_services() {
  unhealthy=()
  if [[ -x /etc/init.d/weblogic-node-manager ]]; then
    if ! /etc/init.d/weblogic-node-manager status | head -1 | grep OK > /dev/null; then
      unhealthy+=(weblogic-node-manager)
    fi
  fi
  if [[ -x /etc/init.d/opmn ]]; then
   if [[ $(/etc/init.d/opmn status | grep -c Alive) -lt 3 ]]; then
      unhealthy+=(opmn)
    fi
  fi
  if [[ -x /etc/init.d/weblogic-server ]]; then
    ok=1
    weblogic_server_status=$(/etc/init.d/weblogic-server status)
    if ! echo "$weblogic_server_status" | head -1 | grep OK > /dev/null; then
      ok=0
    fi
    if ! echo "$weblogic_server_status" | grep -w AdminServer | grep RUNNING > /dev/null; then
      ok=0
    fi
    if (( ! ok )); then
      unhealthy+=(weblogic-server)
    fi
  fi
  managed_services=$(find /etc/init.d/ -name 'WLS*' | cut -d/ -f4)
  for managed_service in $managed_services; do
    ok=1
    if ! /etc/init.d/"$managed_service" status | head -1 | grep OK > /dev/null; then
      ok=0
    fi
    if ! echo "$weblogic_server_status" | grep -w "$managed_service" | grep RUNNING > /dev/null; then
      ok=0
    fi
    if (( ! ok )); then
      unhealthy+=("$managed_service")
    fi
  done
  echo "${unhealthy[@]}"
}

healthcheck() {
  unhealthy_services=$(get_unhealthy_services)
  if [[ -z $unhealthy_services ]]; then
    echo -n $"Healthcheck of weblogic-all: "
    echo_success
    echo
    return 0
  else
    for service in $unhealthy_services; do
      echo -n $"Healthcheck of $service: "
      echo_failure
      echo
    done
    return 1
  fi
}

repair() {
  unhealthy_services=$(get_unhealthy_services)
  if [[ -z $unhealthy_services ]]; then
    echo "All services healthy, nothing to repair"
    return 0
  fi
  for service in $unhealthy_services; do
    /etc/init.d/"$service" restart
  done
  unhealthy_services=$(get_unhealthy_services)
  if [[ -z $unhealthy_services ]]; then
    echo "All services repaired"
    return 0
  fi
  echo "Failed to repair: $unhealthy_services"
  return 1
}

case "$1" in
  start)
    start
    repair
    ;;
  start_sequential)
    start_sequential
    ;;
  start_parallel)
    start_parallel
    ;;
  stop)
    stop
    ;;
  restart)
    restart
    ;;
  status)
    status
    ;;
  healthcheck)
    healthcheck
    ;;
  repair)
    repair
    ;;
  *)
    echo "Usage: $0 {start|stop|restart|status|healthcheck|repair|start_sequential|start_parallel}"
    exit 3
esac

exit $?
