#!/bin/bash
#
# weblogic-server        Startup script for server.
#
# chkconfig: - 75 14
# description: weblogic server

# Source function library.
. /etc/init.d/functions

RETVAL=0
prog=weblogic-server

start_process() {
  nohup su - oracle -c /u01/app/oracle/Middleware/user_projects/domains/NomisDomain/bin/startWebLogic.sh 2>&1 | logger -p local3.info -t $prog &
}

wait_process() {
  timeout 180 /home/oracle/admin/scripts/wait_for_entry_in_log.sh /var/log/messages "Server started in RUNNING mode" "${prog}:"
}

get_process_pids() {
  local process_pids
  ! process_pids=$(pgrep -u oracle -f "startWebLogic.sh$" 2> /dev/null) && return 1
  for process_pid in $process_pids; do
    pstree -ap $process_pid  | grep -v '{' | cut -d, -f2 | cut -d\  -f1
  done
}

start() {
        echo -n $"Starting $prog: "
        if PIDS=$(get_process_pids); then
          echo -n Already running $PIDS && echo_failure
          echo
          return 1
        fi
        echo "init.d starting $prog" | logger -p local3.info -t $prog
        start_process
        wait_process
        if ! get_process_pids > /dev/null; then
          echo_failure
          RETVAL=1
        else
          echo_success
        fi
        echo
        return $RETVAL
}

stop() {
        echo -n $"Shutting down $prog: "
        if ! PIDS=$(get_process_pids); then
          echo -n "process not found" && echo_failure
          echo
          return 1
        fi
        echo init.d killing $prog $PIDS | logger -p local3.info -t $prog
        kill $PIDS
        sleep 2
        if get_process_pids > /dev/null; then
          echo_failure
          RETVAL=1
        else
          echo_success
        fi
        echo
        return $RETVAL
}

status() {
        echo -n $"Status of $prog: "
        if ! PIDS=$(get_process_pids); then
          echo -n "process not found" && echo_failure
          echo
          return 1
        fi
        echo -n $PIDS && echo_success
        echo
        return $RETVAL
}

restart() {
        stop
        start
}

case "$1" in
  start)
        start
        ;;
  stop)
        stop
        ;;
  restart)
        restart
        ;;
  status)
        status
        ;;
  *)
        echo "Usage: $0 {start|stop|restart|status}"
        exit 3
esac

exit $?
