---
- name: Create l2c client response file
  template:
    src: "{{ client_response_file }}.j2"
    dest: "{{ stage }}/{{ client_response_file }}"
    mode: u=rw,g=r,o=r
    owner: oracle
    group: oinstall

- name: Install packages with yum command as those are not getting installed by ansible yum
  ansible.builtin.shell: |
    set -eo pipefail
    main() {
      yum -y install {{ item }}
    }
    main 2>&1 | logger -p local3.info -t ansible-yum-install
  loop:
    - bc
    - binutils-2.20.51.0.2-5.36.el6
    - compat-libcap1-1.10-1
    - compat-libstdc++-33-3.2.3-69.el6
    - e2fsprogs-1.41.12-14.el6
    - e2fsprogs-libs-1.41.12-14.el6
    - glibc-2.12-1.107.el6
    - glibc-devel-2.12-1.107.el6
    - ksh
    - libaio-0.3.107-10.el6
    - libaio-devel-0.3.107-10.el6
    - libX11-1.5.0-4.el6
    - libXau-1.0.6-4.el6
    - libXi-1.6.1-3.el6
    - libXtst-1.2.1-2.el6
    - libgcc-4.4.7-3.el6
    - libstdc++-4.4.7-3.el6
    # - libstdc++-devel-4.4.7-3.el6 < can't resolve dependency issues
    - libxcb-1.8.1-1.el6
    - libXrender
    - libXrender-devel
    - make-3.81-20.el6
#     - net-tools-1.60-110.el6_2 (for Oracle RAC and Oracle Clusterware)
#     - nfs-utils-1.2.3-36.el6 (for Oracle ACFS)
    - smartmontools-5.43-1.el6
    - sysstat-9.0.4-20.el6


# - name: Install oracle prerequisite rpms
#   yum:
#     name: "{{ item }}"
#     state: latest
#     disable_gpg_check: true
#     update_cache: true
#   loop:
#     - "{{ stage }}/{{ oracle_prereq_rpm }}"

- name: Unzip Oracle 11g Client software
  ansible.builtin.unarchive:
    src: "{{ stage }}/{{ client_software }}"
    dest: "{{ oracle_home }}"
    owner: "{{ oracle_install_user }}"
    group: "{{ oracle_install_group }}"
    remote_src: yes

# - name: Unzip Oracle 19c psu patch software
#   ansible.builtin.unarchive:
#     src: "{{ stage }}/{{ oracle_release_update_zip }}"
#     dest: "{{ stage }}"
#     owner: "{{ oracle_install_user }}"
#     group: "{{ oracle_install_group }}"
#     remote_src: yes

# - name: Unzip OPatch in Oracle Client home
#   ansible.builtin.unarchive:
#     src: "{{ stage }}/{{ opatch_zip }}"
#     dest: "{{ oracle_home }}"
#     owner: "{{ oracle_install_user }}"
#     group: "{{ oracle_install_group }}"
#     remote_src: yes

# export CV_ASSUME_DISTID=EL6.10 FIXME: maybe required, maybe not
- name: Install Oracle 11g client server
  ansible.builtin.shell: |
    set -eo pipefail
    main() {  
      {{ oracle_home }}/client/runInstaller -silent -waitforcompletion -ignorePrereqFailure -responseFile {{ stage }}/{{ client_response_file }}
    }
    main 2>&1 | logger -p local3.info -t ansible-oracle-client
  become_user: oracle
  async: 1800
  poll: 30

- name: Run post install root script
  ansible.builtin.shell: |
    set -eo pipefail
    main() {
      echo {{ oracle_inventory }}/orainstRoot.sh
      {{ oracle_inventory }}/orainstRoot.sh
    }
    main 2>&1 | logger -p local3.info -t ansible-oracle-client
