---
- name: Install oracle agent prerequisite zip package
  ansible.builtin.yum:
    name: zip
    state: present
    disable_gpg_check: true

- name: Create directories
  ansible.builtin.file:
    path: "{{ stage }}"
    owner: "{{ oracle_install_user }}"
    group: "{{ oracle_install_group }}"
    state: directory
    recurse: yes

- name: Install OEM 13.5 agent and add targets
  block:
    - name: Get AgentPull.sh script from OMS server
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          cd {{ stage }}
          curl "https://{{ OMS_SERVER }}:7803/em/install/getAgentImage" --insecure -o AgentPull.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-agentpull-get

    - name: Update AgentPull.sh file to change omsHost
      ansible.builtin.lineinfile:
        path: "{{ stage }}/AgentPull.sh"
        regexp: "^omsHost="
        line: "omsHost={{ OMS_SERVER }}"

    - name: Update AgentPull.sh permissions to execute
      ansible.builtin.file:
        path: "{{ stage }}/AgentPull.sh"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"

    - name: Copy Response File to Install OEM Agent
      ansible.builtin.template:
        src: agent_install.j2
        dest: "{{ agent_install_response_file }}"
        mode: "0600"

    # Running multiple AgentPull.sh scripts simultaneously on different
    # instances has been found to sometimes result in corruption of
    # downloaded zip files.  It is unclear why this is happening (possible
    # concurrency or overloading on OMS, or session management issues).
    # To avoid the problem we throttle this task to happen only on one
    # host at a time.
    - name: Install OEM agent
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          {{ stage }}/AgentPull.sh RSPFILE_LOC={{ agent_install_response_file }}
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-agent-install
      async: 86400
      poll: 60
      throttle: 1

  always:
    - name: Remove Response File
      file:
        path: "{{ agent_install_response_file }}"
        state: absent

  # block
  become: true
  become_user: oracle

- name: Post-Install OEM 13.5 agent Root Actions
  block:
    - name: Execute root.sh
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          {{ agent_home }}/root.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-root-script

    - name: Copy Script to fix SELinux File Labels on Agent Startup Script
      ansible.builtin.copy:
        src: selinux_label_gcstartup.sh
        dest: "{{ stage }}/selinux_label_gcstartup.sh"
        owner: root
        group: root
        mode: "0700"

    - name: Fix SELinux File Labels on Agent Startup Script
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          {{ stage }}/selinux_label_gcstartup.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-selinux-label-gcstartup-script
      register: run_selinux_label_gcstartup
      changed_when: run_selinux_label_gcstartup.stdout is search('.*changed.*')

  always:
    # Presense of the SELinux fix script may prevent agent patching, so ensure it is removed
    - name: Remove SELinux Fix Script from Staging Directory
      file:
        path: "{{ stage }}/selinux_label_gcstartup.sh"
        state: absent

  # block
  become: true
  become_user: root

- name: OEM 13.5 emcli setup
  block:
    - name: Create directories
      ansible.builtin.file:
        path: "{{ app_dir }}/emcli/conf"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        state: directory
        recurse: yes

    - name: Remove previous download of emcli to allow download
      file:
        path: "{{ app_dir }}/emcli/emclikit.jar"
        state: absent

    - name: Get emcli from OMS server
      ansible.builtin.shell: |
        cd {{ app_dir }}/emcli
        wget -P {{ app_dir }}/emcli --no-check-certificate https://{{ OMS_SERVER }}:7803/em/public_lib_download/emcli/kit/emclikit.jar

    - name: Install emcli
      ansible.builtin.shell: |
        export JAVA_HOME={{ agent_home }}/oracle_common/jdk/jre
        ${JAVA_HOME}/bin/java -jar {{ app_dir }}/emcli/emclikit.jar -install_dir={{ app_dir }}/emcli

    - name: EMCLI setup with password cleanup
      block:
        - name: Write SYSMAN password to a hidden temp file
          copy:
            content: "{{ oem_sysman_password }}"
            dest: "/tmp/.emcli_password"
            mode: "0600"
          no_log: true

        - name: Setup EMCLI
          ansible.builtin.shell: |
            . ~/.bash_profile
            export JAVA_HOME={{ agent_home }}/oracle_common/jdk/jre
            SYSMAN_PASSWORD=$(< /tmp/.emcli_password)
            rm -f /tmp/.emcli_password
            echo "${SYSMAN_PASSWORD}" | {{ app_dir }}/emcli/emcli setup -url=https://{{ OMS_SERVER }}:7803/em -username="sysman" -dir="{{ app_dir }}/emcli/conf" -trustall -noregister
            unset SYSMAN_PASSWORD
          register: emcli_setup_result
          failed_when: emcli_setup_result.rc != 0

      always:
        - name: Ensure temp password file is deleted (cleanup)
          file:
            path: /tmp/.emcli_password
            state: absent
          ignore_errors: true

  # block
  become: true
  become_user: oracle
