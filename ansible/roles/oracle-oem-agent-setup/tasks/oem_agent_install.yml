---
- name: Install oracle agent prerequisite zip package
  ansible.builtin.yum:
    name: zip
    state: present
    disable_gpg_check: true

- name: Create directories
  ansible.builtin.file:
    path: "{{ stage }}"
    owner: "{{ oracle_install_user }}"
    group: "{{ oracle_install_group }}"
    state: directory
    recurse: yes

- name: Install OEM 13.5 agent and add targets
  block:
    - name: Get AgentPull.sh script from OMS server
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          cd {{ stage }}
          curl "https://{{ OMS_SERVER }}:7803/em/install/getAgentImage" --insecure -o AgentPull.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-agentpull-get

    - name: Update AgentPull.sh file to change omsHost
      ansible.builtin.lineinfile:
        path: "{{ stage }}/AgentPull.sh"
        regexp: "^omsHost="
        line: "omsHost={{ OMS_SERVER }}"

    - name: Update AgentPull.sh permissions to execute
      ansible.builtin.file:
        path: "{{ stage }}/AgentPull.sh"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"

    - name: Copy Response File to Install OEM Agent
      ansible.builtin.template:
        src: agent_install.j2
        dest: "{{ agent_install_response_file }}"
        mode: "0600"

    - name: Add Passwords to Response File
      ansible.builtin.shell: |
        set -eo pipefail
        . ~/.bash_profile
        main() {
          OEM_SYSMAN_PASSWORD=$(aws secretsmanager get-secret-value --secret-id "arn:aws:secretsmanager:{{ region }}:{{ account_ids[oem_secretsmanager_passwords.oem.account_name] }}:secret:{{ oem_secretsmanager_passwords.emrep.secret }}" --query "SecretString" | jq -r 'fromjson | .sysman')
          OEM_AGENT_PASSWORD=$(aws secretsmanager get-secret-value --secret-id "arn:aws:secretsmanager:{{ region }}:{{ account_ids[oem_secretsmanager_passwords.oem.account_name] }}:secret:{{ oem_secretsmanager_passwords.oem.secret }}" --query "SecretString" | jq -r 'fromjson | .agentreg')
          echo "LOGIN_PASSWORD=${OEM_SYSMAN_PASSWORD}" >> {{ agent_install_response_file }}
          echo "AGENT_REGISTRATION_PASSWORD=${OEM_AGENT_PASSWORD}" >> {{ agent_install_response_file }}
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-agent-install-rsp-file
      environment:
        AWS_ACCESS_KEY_ID: "{{ em_secrets_role.sts_creds.access_key }}"
        AWS_SECRET_ACCESS_KEY: "{{ em_secrets_role.sts_creds.secret_key }}"
        AWS_SESSION_TOKEN: "{{ em_secrets_role.sts_creds.session_token }}"

    - name: Install OEM agent
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          {{ stage }}/AgentPull.sh RSPFILE_LOC={{ agent_install_response_file }}
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-agent-install
      async: 86400
      poll: 60

  always:
    - name: Remove Response File
      file:
        path: "{{ agent_install_response_file }}"
        state: absent

  # block
  become: true
  become_user: oracle

- name: Post-Install OEM 13.5 agent Root Actions
  block:
    - name: Execute root.sh
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          {{ oem_agent_base }}/agent_{{ OEM_AGENT_VERSION }}/root.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-root-script

    - name: Copy Script to fix SELinux File Labels on Agent Startup Script
      ansible.builtin.copy:
        src: selinux_label_gcstartup.sh
        dest: "{{ stage }}/selinux_label_gcstartup.sh"
        owner: root
        group: root
        mode: "0700"

    - name: Fix SELinux File Labels on Agent Startup Script
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          {{ stage }}/selinux_label_gcstartup.sh
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-oem-selinux-label-gcstartup-script
      register: run_selinux_label_gcstartup
      changed_when: run_selinux_label_gcstartup.stdout is search('.*changed.*')

  always:
    # Presense of the SELinux fix script may prevent agent patching, so ensure it is removed
    - name: Remove SELinux Fix Script from Staging Directory
      file:
        path: "{{ stage }}/selinux_label_gcstartup.sh"
        state: absent

  # block
  become: false
