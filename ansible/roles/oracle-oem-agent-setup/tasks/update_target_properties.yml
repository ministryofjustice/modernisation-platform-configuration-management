---
- name: OEM 13.5 Target Properties Update
  environment:
    EMCLI_HOME: "{{ app_dir }}/emcli"
    PATH: "{{ app_dir }}/emcli:{{ agent_home }}/oracle_common/jdk/jre/bin:{{ ansible_env.PATH }}"
  block:
    # EMCLI Setup script contains a password so ensure it is not readable by other users
    - name: Copy add targets shell script template
      template:
        src: "{{ item }}.j2"
        dest: "{{ stage }}/{{ item }}"
        mode: "0700"
      loop:
        - update_oem_target_properties.sh

    - name: emcli Login
      ansible.builtin.shell: |
        . ~/.bash_profile
        export JAVA_HOME={{ agent_home }}/oracle_common/jdk/jre
        echo "{{ oem_sysman_password }}" | emcli login -username=sysman -force
        emcli sync
      changed_when: false
      no_log: true

    - name: Discover and promote targets
      ansible.builtin.shell: |
        . ~/.bash_profile
        export JAVA_HOME={{ agent_home }}/oracle_common/jdk/jre
        echo "running update_oem_target_properties.sh"
        nohup {{ stage }}/update_oem_target_properties.sh > /tmp/update_oem_target_properties.log 2>&1 &
        echo $! > /tmp/update_oem_target_properties.pid
      args:
        executable: /bin/bash

    - name: Wait for add_targets.sh script to complete
      ansible.builtin.shell: |
        logfile="/tmp/update_oem_target_properties.log"
        pidfile="/tmp/update_oem_target_properties.pid"

        # Wait until the logfile is created
        while [ ! -f "$logfile" ]; do
          echo "Waiting for log file..."
          sleep 5
        done

        # Wait until the PID file is created
        while [ ! -f "$pidfile" ]; do
          echo "Waiting for pid file..."
          sleep 2
        done

        pid=$(cat "$pidfile")

        echo "Monitoring PID $pid..."

        # Wait for the process to finish
        while kill -0 "$pid" 2>/dev/null; do
          sleep 10
        done

        # Clean up the PID file
        rm -f "$pidfile"

        echo "Final log output:"
        cat "$logfile"
      args:
        executable: /bin/bash
      async: 3600
      poll: 0
      register: discovery_async

    - name: Wait for background task to finish
      ansible.builtin.async_status:
        jid: "{{ discovery_async.ansible_job_id }}"
      register: discovery_result
      until: discovery_result.finished
      retries: 120 # Retry up to 120 times
      delay: 10 # Wait 10 seconds between retries

  always:
    - name: Remove setup scripts from staging area
      ansible.builtin.file:
        path: "{{ stage }}/{{ item }}"
        state: absent
      loop:
        - update_oem_target_properties.sh
      tags: clean_up

    # Leave the logfile in /tmp for analysis and debugging

  # block
  become: true
  become_user: oracle
