---
- name: Fail if weblogic_managed_app variable not defined
  fail:
    msg: "Error, please ensure weblogic_managed_app is defined"
  when: weblogic_managed_app is not defined

# - name: Check if managed app already configured
#   ansible.builtin.stat:
#     path: /etc/init.d/{{ weblogic_managed_app }}
#   register: weblogic_created_managed_app_check

- name: Configure managed app
  block:
    - debug:
        msg: "Creating managed app {{ weblogic_managed_app }}"

    # ensure everything is running
    - name: Start services if not already running
      ansible.builtin.service:
        name: weblogic-all
        state: started

    - name: Copy managed app configuration files
      ansible.builtin.template:
        src: "10.3{{ item }}"
        dest: "{{ item }}"
        owner: oracle
        group: oinstall
      loop:
        - /u01/software/weblogic/{{ weblogic_managed_app }}.properties

    - name: Create application directories
      ansible.builtin.file:
        path: "{{ xtag_app_path }}"
        state: directory
        owner: oracle
        group: oinstall
        mode: "0755"

    - name: Get xtag application ear file from S3 bucket
      amazon.aws.aws_s3:
        bucket: "{{ image_builder_s3_bucket_name }}"
        object: "weblogic-software{{ item }}"
        dest: "{{ item }}"
        mode: get
        overwrite: latest
      loop:
        - "{{ xtag_app_path }}/xtagoutbound.ear"

    - name: Create managed app
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        . ~/.bash_profile
        . $WL_HOME/server/bin/setWLSEnv.sh
        main() {
          echo "# create managed app {{ weblogic_managed_app }}"
          java weblogic.WLST ~/admin/scripts/create_managed_app.py -p /u01/software/weblogic/{{ weblogic_managed_app }}.properties
        }
        main 2>&1 | logger -p local3.info -t ansible-weblogic
      async: 7200
      poll: 60

    - name: Create managed app security directory
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        owner: oracle
        group: oinstall
        mode: "0755"
      loop:
        - "/u01/app/oracle/Middleware/user_projects/domains/NomisDomain/servers/{{ weblogic_managed_app }}/security"

    # the boot.properties file is automatically updated by the weblogic server
    - name: Copy managed app boot properties
      ansible.builtin.template:
        src: "10.3/u01/app/oracle/Middleware/user_projects/domains/NomisDomain/servers/AdminServer/security/boot.properties"
        dest: "{{ item }}"
        owner: oracle
        group: oinstall
        force: false
      loop:
        - "/u01/app/oracle/Middleware/user_projects/domains/NomisDomain/servers/{{ weblogic_managed_app }}/security/boot.properties"

    # - name: Copy managed app init.d script
    #   vars:
    #     weblogic_managed_server_name: "{{ weblogic_managed_app }}"
    #   ansible.builtin.template:
    #     src: "10.3/etc/init.d/weblogic-managed-server"
    #     dest: "/etc/init.d/{{ weblogic_managed_server_name }}"
    #     mode: "0755"

    # # this ensures values in boot.properties become encrypted
    # - name: Restart service
    #   ansible.builtin.service:
    #     name: "{{ weblogic_managed_app }}"
    #     state: restarted
    #   async: 600
    #   poll: 20

  always:
    - name: Remove temporary forms configuration files
      ansible.builtin.file:
        path: "{{ item }}"
        state: absent
      loop:
        - /u01/software/weblogic/{{ weblogic_managed_app }}.properties

  # block
  when: not weblogic_created_managed_app_check.stat.exists
