#!/bin/bash
#set -x
export ERROR_STATUS=9
export THISSCRIPT=$(basename $0)
export STREAMS_SCRIPT_DIR=~/admin/streams_scripts

usage () {
	echo ""
  	echo "Usage:"
  	echo ""
  	echo "  $THISSCRIPT -t <refresh database sid> -e <script directory> "
  	exit 1
}

set_ora_env () {
  	export ORAENV_ASK=NO
  	export ORACLE_SID=$1
  	. oraenv > /dev/null
  	export NLS_DATE_FORMAT=YYMMDDHH24MISS
}

info () {
  	T=$(date +"%D %T")
  	echo "INFO : $THISSCRIPT : $T : $1"
  	if [ "$DEBUG_MODE" = "Y" ]
  	then
    		read CONTINUE?"Press any key to continue "
  	fi
}

warning () {
  	T=$(date +"%D %T")
  	echo "WARNING : $THISSCRIPT : $T : $1"
}

error () {
  	T=$(date +"%D %T")
  	echo "ERROR : $THISSCRIPT : $T : $1"
  	exit $ERROR_STATUS
}

get_user_creds () {
  	USER=$1
  	aws secretsmanager get-secret-value --secret-id "/oracle/database/${REFRESH_DB_SID}/passwords" --query SecretString --output text | jq -r .${USER}
}

db_name_change () {
	set_ora_env $REFRESH_DB_SID
	echo "spool ${DB_SCRIPT_DIR}/db_name_change.log" > ${DB_SCRIPT_DIR}/db_name_change.sql
	echo "shutdown immediate" >> ${DB_SCRIPT_DIR}/db_name_change.sql
	echo "startup mount exclusive pfile='${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora'" >> ${DB_SCRIPT_DIR}/db_name_change.sql
	echo "exit" >> ${DB_SCRIPT_DIR}/db_name_change.sql
	sqlplus "/ as sysdba" @${DB_SCRIPT_DIR}/db_name_change.sql
	nid target=sys/$(get_user_creds sys) dbname=${REFRESH_DB_SID} logfile=${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_nid_change.log
	if [ $? -ne 0 ]
	then
        	echo "DB Name change failed . "
        	exit 1
	fi
	sed -i "/db_name/d" ${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora
	echo "log_archive_config='dg_config=(LSCNOM,LSMIS)'" >> ${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora
	echo "log_archive_dest_2='SERVICE=LSMIS ARCH OPTIONAL NOREGISTER REOPEN=60 DB_UNIQUE_NAME=LSMIS'" >> ${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora
	echo "log_archive_dest_state_2=enable"  >> ${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora
	echo "db_name=${REFRESH_DB_SID}" >> ${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora
	echo "spfile='+DATA/${REFRESH_DB_SID}/spfile${REFRESH_DB_SID}.ora'" > $ORACLE_HOME/dbs/init${REFRESH_DB_SID}.ora

	echo "spool ${DB_SCRIPT_DIR}/post_db_name_change.log" >  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "startup mount  pfile='${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora'" >> ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "alter database open resetlogs;" >> ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "create spfile='+DATA/${REFRESH_DB_SID}/spfile${REFRESH_DB_SID}.ora' from pfile='${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora';" >> ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "shutdown immediate" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "startup nomount" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "show parameter spfile" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "alter database mount;" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "alter database flashback on ;" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "alter database enable block change tracking;" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "alter database open;" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "alter database force logging;" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "alter user dbsnmp identified by $(get_user_creds dbsnmp) account unlock;" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "create restore point after_refresh_pre_post_scripts guarantee flashback database;" >>  ${DB_SCRIPT_DIR}/post_db_name_change.sql
	echo "exit" >> ${DB_SCRIPT_DIR}/post_db_name_change.sql
	sqlplus -s "/ as sysdba" @${DB_SCRIPT_DIR}/post_db_name_change.sql
	srvctl start database -d $REFRESH_DB_SID
	info "Completed db name and post db setup."
}

nart_report_change () {
	info "Starting nart_report_change"
	echo "spool ${REFRESH_DB_SID}_nart_report_change.log" > ${REFRESH_DB_SID}_nart_report_change.sql
	echo "set verify off trimspool on pages 5000 lines 400 echo off termout off head off trimout on" >> ${REFRESH_DB_SID}_nart_report_change.sql
	echo "alter table oms_owner.system_profiles modify profile_value varchar2(42) ;" >> ${REFRESH_DB_SID}_nart_report_change.sql
	echo "update oms_owner.system_profiles set profile_value='c-nomis.lsast.hmps.noms.root:7777' where profile_code in ('ORAWEB','ORAREP') ;" >> ${REFRESH_DB_SID}_nart_report_change.sql
	echo "update oms_owner.system_profiles set profile_value='rep_psa20433_home1' where profile_type='CLIENT' and profile_code='REPSERVER' ;" >> ${REFRESH_DB_SID}_nart_report_change.sql
	echo "UPDATE SYSTEM_PROFILES SET PROFILE_VALUE = 'nomis_ls' WHERE PROFILE_CODE IN ('BO_MIS_CL','BO_OR_CL');" >> ${REFRESH_DB_SID}_nart_report_change.sql
	echo "exit" >> ${REFRESH_DB_SID}_nart_report_change.sql
	sqlplus -s / as sysdba @${REFRESH_DB_SID}_nart_report_change.sql
	[ `grep ORA- ${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_nart_report_change.log | wc -l ` -gt 0 ] && error "Failed during NART report setup"
	info "Completed nart_report_change"
}

user_creation () {
	info "Starting user_creation"
	echo "set verify off trimspool on pages 5000 lines 400 termout off head off trimout on" > ${DB_SCRIPT_DIR}/user_creation.sql
        echo "spool ${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_user_creation.log" >> ${DB_SCRIPT_DIR}/user_creation.sql
	echo "alter user api_proxy_user identified by $(get_user_creds api_proxy_user) ; "  >> ${DB_SCRIPT_DIR}/user_creation.sql
	ADD_USERS=$(get_user_creds additional_users)
	for i in ${ADD_USERS//,/ }
	do
		echo "create user ${i} identified by $(get_user_creds ${i}) default tablespace users temporary tablespace temp quota unlimited on users;" >> ${DB_SCRIPT_DIR}/user_creation.sql
		echo "alter USER ${i} grant connect through api_proxy_user;" >> ${DB_SCRIPT_DIR}/user_creation.sql
	done
	echo "grant connect, tag_ro, tag_user, create any table, create any index, insert any table, create any materialized view to ${ADD_USERS};" >> ${DB_SCRIPT_DIR}/user_creation.sql
	additional_dba_users=$(get_user_creds additional_users_dba)
	echo "grant dba to ${additional_dba_users};" >> ${DB_SCRIPT_DIR}/user_creation.sql
	echo "spool off"  >> ${DB_SCRIPT_DIR}/user_creation.sql
	echo "exit" >> ${DB_SCRIPT_DIR}/user_creation.sql
	sqlplus -s "/ as sysdba" @${DB_SCRIPT_DIR}/user_creation.sql
	[ `grep ORA- ${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_user_creation.log | wc -l ` -gt 0 ] && error "Failed during user setup"
}

streams_setup () {
	STRMADMIN_PASSWORD=$(get_user_creds strmadmin)
	echo $STRMADMIN_PASSWORD
	echo "spool ${DB_SCRIPT_DIR}/streams_setup.log" > ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "alter system archive log current;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "alter system archive log current;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "alter system archive log current;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "alter system archive log current;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "alter system set job_queue_processes=150 scope=both;"  >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "select name , to_char(completion_time ,'dd.mm.yyyy hh24:mi:ss') from v\$archived_log where completion_time> sysdate-1/24;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "select owner, object_type, count(1) from dba_objects where status='INVALID' group by owner, object_type;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@?/rdbms/admin/utlrp" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@?/rdbms/admin/utlrp" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@?/rdbms/admin/utlrp" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@?/rdbms/admin/utlrp" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "select owner, object_type, count(1) from dba_objects where status='INVALID' group by owner, object_type;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@${STREAMS_SCRIPT_DIR}/source_provisioning_db_link.sql" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "conn strmadmin/${STRMADMIN_PASSWORD}" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "drop database link mis_strm_link;" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@${STREAMS_SCRIPT_DIR}/source_mis_link" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@${STREAMS_SCRIPT_DIR}/source_dd_scn" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "@${STREAMS_SCRIPT_DIR}/source_mis_stop_tab" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "grant select on strmadmin.mis_stop_point to API_PROXY_USER;"  >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "spool off" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	echo "exit" >> ${DB_SCRIPT_DIR}/streams_setup.sql
	sqlplus -s "/ as sysdba" @${DB_SCRIPT_DIR}/streams_setup.sql
	[ `grep ORA- ${DB_SCRIPT_DIR}/streams_setup.log| wc -l ` -gt 0 ] && error "Failed during streams setup"
	info "Completed streams_setup"
}

####################
# Main
####################

REFRESH_DB_SID="UNSPECIFIED"
SCRIPT_DIR="UNSPECIFIED"

while getopts "t:e:" opt
do
  case $opt in
    t) REFRESH_DB_SID=$OPTARG ;;
    e) SCRIPT_DIR=$OPTARG ;;
    *) usage ;;
  esac
done

[ "${REFRESH_DB_SID}" = "UNSPECIFIED" ] && usage
[ "${SCRIPT_DIR}" = "UNSPECIFIED" ] && usage

DB_SCRIPT_DIR=$SCRIPT_DIR/$REFRESH_DB_SID
HOSTNAME=$(hostname)

set_ora_env  ${REFRESH_DB_SID}
info "Starting post steps"

# NART reporting setup and misload
nart_report_change

# User creation
user_creation

# Database Name change
db_name_change

# Streams setup
streams_setup