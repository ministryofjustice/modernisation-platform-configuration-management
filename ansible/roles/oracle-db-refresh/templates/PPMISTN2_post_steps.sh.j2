#!/bin/bash
#set -x
export ERROR_STATUS=9
export THISSCRIPT=$(basename $0)
export STREAMS_SCRIPT_DIR=~/admin/streams_scripts

usage () {
  	echo ""
  	echo "Usage:"
  	echo ""
  	echo "  $THISSCRIPT -t <refresh database sid> -e <script directory> "
  	exit 1
}

set_ora_env () {
  	export ORAENV_ASK=NO
  	export ORACLE_SID=$1
  	. oraenv > /dev/null
  	export NLS_DATE_FORMAT=YYMMDDHH24MISS
}

info () {
  	T=$(date +"%D %T")
  	echo "INFO : $THISSCRIPT : $T : $1"
  	if [ "$DEBUG_MODE" = "Y" ]
  	then
    		read CONTINUE?"Press any key to continue "
  	fi
}

warning () {
  	T=$(date +"%D %T")
  	echo "WARNING : $THISSCRIPT : $T : $1"
}

error () {
  	T=$(date +"%D %T")
  	echo "ERROR : $THISSCRIPT : $T : $1"
  	exit $ERROR_STATUS
}

get_user_creds () {
  	USER=$1
  	aws secretsmanager get-secret-value --secret-id "/oracle/database/${REFRESH_DB_SID}/passwords" --query SecretString --output text | jq -r .${USER}
}

create_pfile_restore_point () {
	info "Create spfile and Restore point started"
	cat /dev/null > ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "spfile='+DATA/${REFRESH_DB_SID}/spfile${REFRESH_DB_SID}.ora'" > ${ORACLE_HOME}/dbs/init${REFRESH_DB_SID}.ora
	echo "spool ${DB_SCRIPT_DIR}/create_pfile_restore_point.log" >>  ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "create spfile='+DATA/${REFRESH_DB_SID}/spfile${REFRESH_DB_SID}.ora' from pfile='${DB_SCRIPT_DIR}/init${REFRESH_DB_SID}.ora';" >> ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "shutdown immediate" >> ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "startup mount"  >> ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "create restore point after_refresh_pre_post_scripts guarantee flashback database;" >> ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "alter database open;" >> ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "spool off" >> ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql
	echo "exit" >> ${DB_SCRIPT_DIR}/create_pfile_restore_point.sql

	sqlplus -s "/ as sysdba" @${DB_SCRIPT_DIR}/create_pfile_restore_point.sql > /dev/null
	[ $(grep ORA- ${DB_SCRIPT_DIR}/create_pfile_restore_point.log | grep -v ORA-01507| wc -l) -gt 0 ] && error "Post step create_pfile_restore_point failed."
	info "Create spfile and Restore point completed."
}

create_db_links () {
        info "Create database links started"
    	cat /dev/null > ${DB_SCRIPT_DIR}/create_db_links.sql
	echo "spool ${DB_SCRIPT_DIR}/create_db_links.log" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "grant create database link to mistrans ;" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "grant create database link to mistrans ;" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "create user  KQI03D_RO identified by $(get_user_creds KQI03D_RO) default tablespace users ;" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "grant CONNECT,SELECT ANY DICTIONARY, SELECT ANY TABLE to kqi03d_RO;" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "create user CQE77R_RO identified by $(get_user_creds CQE77R_RO) default tablespace users ;" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "grant CONNECT,SELECT ANY DICTIONARY, SELECT ANY TABLE to CQE77R_RO;" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "conn mistrans/$(get_user_creds mistrans)" >> ${DB_SCRIPT_DIR}/create_db_links.sql
    	echo "create database link mistran_link connect to mistrans identified by $(get_user_creds mistrans) using 'PPMISTRN';" >> ${DB_SCRIPT_DIR}/create_db_links.sql
	echo "exit" >> ${DB_SCRIPT_DIR}/create_db_links.sql

	sqlplus -s "/ as sysdba" @${DB_SCRIPT_DIR}/create_db_links.sql > /dev/null
	[ $(grep ORA- ${DB_SCRIPT_DIR}/create_db_links.log  | grep -v ORA- | wc -l ) -gt 0 ] && error "Post step create_db_links failed."
	info "Create database links completed."
}

restart_db () {
        info "Restart Database started"
        cat /dev/null > ${DB_SCRIPT_DIR}/restart_db.sql
        echo "spool ${DB_SCRIPT_DIR}/restart_db.log" >> ${DB_SCRIPT_DIR}/restart_db.sql
        echo "shutdown immediate" >> ${DB_SCRIPT_DIR}/restart_db.sql
        echo "exit" >> ${DB_SCRIPT_DIR}/restart_db.sql

        sqlplus -s "/as sysdba" @${DB_SCRIPT_DIR}/restart_db.sql > /dev/null
        srvctl stop database -d ${ORACLE_SID} >> ${DB_SCRIPT_DIR}/restart_db.log
        srvctl start database -d ${ORACLE_SID} >>  ${DB_SCRIPT_DIR}/restart_db.log
        info "Restart database completed."
}

####################
# Main
####################

REFRESH_DB_SID="UNSPECIFIED"
SCRIPT_DIR="UNSPECIFIED"

while getopts "t:e:" opt
do
  case $opt in
    t) REFRESH_DB_SID=$OPTARG ;;
    e) SCRIPT_DIR=$OPTARG ;;
    *) usage ;;
  esac
done

[ "${REFRESH_DB_SID}" = "UNSPECIFIED" ] && usage
[ "${SCRIPT_DIR}" = "UNSPECIFIED" ] && usage

DB_SCRIPT_DIR=$SCRIPT_DIR/$REFRESH_DB_SID
HOSTNAME=$(hostname)

set_ora_env  ${REFRESH_DB_SID}
info "Starting post steps"

create_pfile_restore_point
create_db_links
restart_db
