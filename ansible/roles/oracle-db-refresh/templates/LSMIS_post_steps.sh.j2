#!/bin/bash
set -x
export ERROR_STATUS=9
export THISSCRIPT=$(basename $0)
export STREAMS_SCRIPT_DIR=~/admin/streams_scripts

usage () {
  echo ""
  echo "Usage:"
  echo ""
  echo "  $THISSCRIPT -t <refresh database sid> -e <script directory> "
  exit 1
}

set_ora_env () {
  export ORAENV_ASK=NO
  export ORACLE_SID=$1
  . oraenv
  export NLS_DATE_FORMAT=YYMMDDHH24MISS
}

warning () {
  T=$(date +"%D %T")
  echo "WARNING : $THISSCRIPT : $T : $1"
}

error () {
  T=$(date +"%D %T")
  echo "ERROR : $THISSCRIPT : $T : $1"
  exit $ERROR_STATUS
}

get_user_creds () {
  USER=$1
  secret_arn="/oracle/database/${REFRESH_DB_SID}/passwords"
  aws secretsmanager get-secret-value --secret-id "${secret_arn}" --query SecretString --output text | jq -r .${USER}
}

db_name_change () {
set_ora_env $REFRESH_DB_SID
echo "log_archive_config='dg_config=(LSCNOM,LSMIS)'" >> ${PFILE_DIR}/init${REFRESH_DB_SID}.ora
echo "log_archive_dest_2='LOCATION=+DATA/LSMIS/ARCHIVELOG VALID_FOR=(STANDBY_LOGFILES,ALL_ROLES)'"  >> ${PFILE_DIR}/init${REFRESH_DB_SID}.ora
sqlplus -s "/ as sysdba" << EOF >> ${DB_SCRIPT_DIR}/db_name_change.log
create spfile='+DATA/${REFRESH_DB_SID}/spfile${REFRESH_DB_SID}.ora' from pfile='${PFILE_DIR}/init${REFRESH_DB_SID}.ora';
shutdown immediate
startup nomount
show parameter spfile
alter database mount;
alter database flashback on ;
alter database enable block change tracking;
alter database open;
alter user dbsnmp identified by $(get_user_creds dbsnmp) account unlock;
shutdown immediate
exit
EOF
srvctl start database -d $REFRESH_DB_SID
}

nart_report_change () {
set_ora_env $REFRESH_DB_SID
sqlplus -s / as sysdba << EOF > ${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_nart_report_change.log
set verify off trimspool on pages 5000 lines 400 echo off termout off head off trimout on
UPDATE BODISTAGING.ETL_PARAM SET PARAM_VALUE = '\\preprodsapshares.file.core.windows.net\bipshare\event\Contingency_file.txt' WHERE PARAM_NAME = 'CONTINGENCY_FILENAME';
commit;
exit
EOF
[ `grep ORA- ${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_nart_report_change.log | wc -l ` -gt 0 ] && error "Failed during NART report setup"
}

user_creation () {
set_ora_env $REFRESH_DB_SID
sqlplus -s "/ as sysdba" << EOF
set verify off trimspool on pages 5000 lines 400 termout off head off trimout on
spool ${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_user_creation.log
@${DB_SCRIPT_DIR}/user_creation.sql
spool off
exit
EOF
[ `grep ORA- ${DB_SCRIPT_DIR}/${REFRESH_DB_SID}_user_creation.log | wc -l ` -gt 0 ] && error "Failed during user setup"
}

streams_setup () {
STRMADMIN_PASSWORD=$(get_user_creds strmadmin)
BODISTAGING_PASSWORD=$(get_user_creds bodistaging)
sqlplus -s "/ as sysdba" << EOF > ${DB_SCRIPT_DIR}/streams_output.log
set head off
col name format a120
set linesize 170
alter system archive log current;
alter system archive log current;
alter system archive log current;
select name , to_char(completion_time ,'dd.mm.yyyy hh24:mi:ss') from v\$archived_log where completion_time> sysdate-1/24;
select owner, object_type, count(1) from dba_objects where status='INVALID' group by owner, object_type;
@?/rdbms/admin/utlrp
@?/rdbms/admin/utlrp
@?/rdbms/admin/utlrp
select owner, object_type, count(1) from dba_objects where status='INVALID' group by owner, object_type;
set echo on
conn strmadmin/${STRMADMIN_PASSWORD}
show user
drop database link cnomp;
@${STREAMS_SCRIPT_DIR}/mis_stop_capture
@${STREAMS_SCRIPT_DIR}/mis_stop_apply
@${STREAMS_SCRIPT_DIR}/MIS_STRM_CLEARUP_v1.0e.6.sql
whenever sqlerror exit
@${STREAMS_SCRIPT_DIR}/mis_db_link
conn bodistaging/${BODISTAGING_PASSWORD}
show user
@${STREAMS_SCRIPT_DIR}/update_mis
conn strmadmin/${STRMADMIN_PASSWORD}
@${STREAMS_SCRIPT_DIR}/MIS_STRM_PKG_v1.0e.59.sql
@${STREAMS_SCRIPT_DIR}/MIS_STRM_PBODY_v1.0e.59.sql
grant execute on MIS_STRM_PKG1 to bodistaging;
grant create sequence to bodistaging;
conn bodistaging/${BODISTAGING_PASSWORD}
show user
@${STREAMS_SCRIPT_DIR}/MIS_DB2_STRM0_v1.0e.9.sql
@${STREAMS_SCRIPT_DIR}/MIS_DB2_STRM1_v1.0e.7.sql
@${STREAMS_SCRIPT_DIR}/MIS_DB2_STRM2_v1.0e.34.sql
conn strmadmin/${STRMADMIN_PASSWORD}
show user
set head off feedback off
spool ${STREAMS_SCRIPT_DIR}/san_define_variable.sql
select 'DEFINE FIRST_SCN = '|| FIRST_CHANGE# from v\$archived_log@${SOURCE_ORACLE_SID}  where COMPLETION_TIME> sysdate-4/24 and DICTIONARY_BEGIN='YES';
spool off
@${STREAMS_SCRIPT_DIR}/san_define_variable.sql
@${STREAMS_SCRIPT_DIR}/san_MIS_STRM_SETUP_v1.0e.18.sql
select * from dba_registered_archived_log;
@${STREAMS_SCRIPT_DIR}/mis_start_capture
@${STREAMS_SCRIPT_DIR}/mis_start_apply
@${STREAMS_SCRIPT_DIR}/mis_batch_roll_job
@${STREAMS_SCRIPT_DIR}/mis_batch_control_job
@${STREAMS_SCRIPT_DIR}/mis_log_purge_job
exit
EOF
[ `grep ORA- ${DB_SCRIPT_DIR}/streams_output.log| wc -l ` -gt 0 ] && error "Failed during streams setup"
}

####################
# Main
####################

REFRESH_DB_SID="UNSPECIFIED"
SCRIPT_DIR="UNSPECIFIED"

while getopts "t:e:" opt
do
  case $opt in
    t) REFRESH_DB_SID=$OPTARG ;;
    e) SCRIPT_DIR=$OPTARG ;;
    *) usage ;;
  esac
done

[ "${REFRESH_DB_SID}" = "UNSPECIFIED" ] && usage
[ "${SCRIPT_DIR}" = "UNSPECIFIED" ] && usage

DB_SCRIPT_DIR=$SCRIPT_DIR/$REFRESH_DB_SID
PFILE_DIR=$DB_SCRIPT_DIR/pfile
STREAMS_SCRIPT_DIR=/home/oracle/admin/mis_streams_scripts
SOURCE_ORACLE_SID=PPCNOM

echo "Starting post steps"
set_ora_env ${REFRESH_DB_SID}
# NART reporting setup and misload
nart_report_change

# User creation
user_creation

# Database Name change
db_name_change

# Streams setup
streams_setup