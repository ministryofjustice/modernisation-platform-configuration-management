---
- name: Check if TARGET_DB is defined
  ansible.builtin.fail:
    msg: "TARGET_DB is not defined"
  when: TARGET_DB == ""

- name: Check if ALTERNATE_WEEK is defined
  ansible.builtin.fail:
    msg: "ALTERNATE_WEEK is not defined"
  when: ALTERNATE_WEEK == ""

- name: Check if DBA requested to keep refresh on hold
  ansible.builtin.stat:
    path: "{{refresh_script_dir }}/{{ TARGET_DB }}/onhold_refresh.txt"
  register: refresh_onhold_check

- name: Run {{ TARGET_DB }} database refresh
  block:
    - name: Create Database Refresh script directory
      ansible.builtin.file:
        path: "{{ refresh_script_dir }}/{{ TARGET_DB }}"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"
        state: directory
        recurse: yes

    - name: Copy the latest backup control file handle details to the runner
      ansible.builtin.copy:
        src: "/tmp/{{ TARGET_DB }}_control.txt"
        dest: "{{refresh_script_dir }}/{{ TARGET_DB }}/{{ TARGET_DB }}_control.txt"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"
        remote_src: true

    - name: Copy Generic Database refresh script
      ansible.builtin.template:
        src: "db_refresh.sh.j2"
        dest: "{{refresh_script_dir }}/db_refresh.sh"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"

    - name: Copy post refresh script for {{ TARGET_DB }}
      ansible.builtin.template:
        src: "{{ TARGET_DB }}_post_steps.sh.j2"
        dest: "{{refresh_script_dir }}/{{ TARGET_DB }}/post_steps.sh"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"

    - name: Copy system_parameter script if target is PPOASYS
      ansible.builtin.template:
        src: "{{ TARGET_DB }}_Create_XDB_SYSTEM_PARAMETER.sql.j2"
        dest: "{{refresh_script_dir }}/{{ TARGET_DB }}/Create_XDB_SYSTEM_PARAMETER.sql"
        owner: "{{ oracle_install_user }}"
        group: "{{ oracle_install_group }}"
        mode: "0700"
      when: TARGET_DB == "PPOASYS"

    - name: Start database refresh script
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        PATH=$PATH:/usr/local/bin
        main () {
          {{ refresh_script_dir }}/db_refresh.sh -t {{ TARGET_DB }} -r {{ ALTERNATE_WEEK }} 
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-db        
      aync: 10
      poll: 0

  when: not refresh_onhold_check.stat.exists
