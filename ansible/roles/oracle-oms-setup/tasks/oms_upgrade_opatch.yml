---
- name: Get OPatch Version
  become: true
  become_user: "{{ oracle_install_user }}"
  environment: "{{ oms_env }}"
  ansible.builtin.shell: |
    ${ORACLE_HOME}/OPatch/opatch version | head -1 | cut -d' '  -f3 | grep {{ oms_opatch_version }} | wc -l
  register: required_version_check

- name: Show OPatch Version
  debug:
    var: required_version_check.stdout

- name: Upgrade OPatch
  block:
    - name: Download software from s3 bucket
      include_tasks: download_patch_software.yml
      vars:
        files:
          - "{{ oms_opatch_patch }}"

    # Stop running services in the ORACLE_HOME that will be patched
    - name: Stop OMS
      ansible.builtin.shell: |
        {{ emctl_oms }} stop oms -all
      when: not ansible_check_mode

    - name: Upgrade OPatch
      ansible.builtin.shell: |
        ${ORACLE_HOME}/oracle_common/jdk/bin/java -jar {{ omspatcher_stage }}/6880880/opatch_generic.jar -silent oracle_home=${ORACLE_HOME}
      when: not ansible_check_mode

    - name: Get OPatch Version After Upgrade
      ansible.builtin.shell: |
        ${ORACLE_HOME}/OPatch/opatch version | head -1 | cut -d' '  -f3 | grep {{ oms_opatch_version }} | wc -l
      register: opatch_version_check

  # block
  when: required_version_check.stdout == "0"
  become: true
  become_user: "{{ oracle_install_user }}"
  environment: "{{ oms_env }}"
