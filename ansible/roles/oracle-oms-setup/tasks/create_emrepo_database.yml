---
- name: Check {{ emrepo_db_name.emrepo_db_name }} database already created or not
  lineinfile:
    dest: /etc/oratab
    line: "{{ emrepo_db_name.emrepo_db_name }}"
  check_mode: yes
  register: emrepo_db_exists_check

- name: Create OEM repository database
  block:
    - name: Copy OEM repository creation scripts
      template:
        src: "{{ item }}.j2"
        dest: "{{ stage }}/{{ item }}"
        owner: oracle
        group: oinstall
        mode: "0700"
      loop:
        - create_oem_repository_db.sh
        - db_set_parameter.sh

    - debug:
        msg: "Sys password {{ db_sys_password }} and system password {{ db_system_password }}"

    - name: Create OEM repository database
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          echo "# create_oem_repository_db.sh "
          {{ stage }}/create_oem_repository_db.sh {{ emrepo_db_name.emrepo_db_name }} {{ db_sys_password }} {{ db_system_password }}
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-db
      async: 86400
      poll: 60
      when: not ansible_check_mode

    - name: Setup OEM repository database parameters
      become_user: oracle
      ansible.builtin.shell: |
        set -eo pipefail
        main() {
          echo "# create_recovery_catalog_user.sh"
          {{ stage }}/db_set_parameter.sh {{ emrepo_db_name.emrepo_db_name }} {{ parameter.name }} {{ parameter.value }} {{ parameter.scope }}
        }
        main 2>&1 | logger -p local3.info -t ansible-oracle-db
      loop_control:
        loop_var: parameter
      loop: "{{ emrepo_db_name.parameters }}"

    - name: Restart OEM repository database
      become_user: oracle
      ansible.builtin.shell: |
        export PATH=$PATH:/usr/local/bin
        . oraenv <<< {{ emrepo_db_name.emrepo_db_name }} 
        srvctl stop database -d {{ emrepo_db_name.emrepo_db_name }} 
        srvctl start database -d {{ emrepo_db_name.emrepo_db_name }}

    - name: Upload sys and system passwords for OEM repository database
      become_user: oracle
      ansible.builtin.shell: |
        export PATH=$PATH:/usr/local/bin
        aws ssm put-parameter --name "{{ ssm_parameters_path_db_sys_password }}" --value {{ db_sys_password }} --type "SecureString" --overwrite 
        aws ssm put-parameter --name "{{ ssm_parameters_path_db_system_password }}" --value {{ db_system_password }} --type "SecureString" --overwrite

  # block
  when: emrepo_db_exists_check.changed
