---
- name: Create Dynamic Group for {{ application }} Targets
  block:
    # EMCLI Login script contains a password so ensure it is not readable by other users
    - name: Copy group creation scripts
      ansible.builtin.template:
        src: "{{ item }}.j2"
        dest: "{{ stage }}/{{ item }}"
        mode: "0700"
        owner: oracle
        group: oinstall
      loop:
        - create_group.sh
        - create_superset_group.sh

    - name: Run Dynamic Group Creation Script
      ansible.builtin.shell: |
        echo "To resolve - Error: Some required configuration is missing, corrupt, inaccessible, or insecure (access permissions are too liberal)."
        echo "Resolve the problem and run setup."
        chown -R oracle:oinstall /u01/app/oracle/product/gc_inst135/em/EMGC_OMS1/sysman/emcli/setup/.emcli

    - name: emcli Login
      import_tasks: emcli_login.yml

    - name: Run Dynamic Group Creation Script for Each Application
      become_user: oracle
      ansible.builtin.shell: |
        echo "running create_group.sh"
        {{ stage }}/create_group.sh
      register: run_group_creation
      changed_when: run_group_creation.stdout is search('.*dynamic group created.*')
      loop: "{{ application_groups.values() | flatten | unique }}"
      loop_control:
        loop_var: application_name
      environment:
        APPLICATION: "{{ application_name }}"

    # We create "superset" groups which group Prisons applications together
    # or Probation applications together.  The hmpps-oem application appears
    # in both superset groups since it is shared.
    # In contrast to the application groups, the superset is a static group
    # as it does not need to automatically add new targets.
    - name: Create Application Superset Groups
      become_user: oracle
      ansible.builtin.shell: |
        echo "running create_superset_group.sh"
        {{ stage }}/create_superset_group.sh
      register: run_supserset_group_creation
      changed_when: run_supserset_group_creation.stdout is search('Group .*created successfully.*')
      loop: "{{ application_groups.keys() }}"
      loop_control:
        loop_var: application_superset_name
      environment:
        SUPERSET: "{{ application_superset_name }}"
        MEMBERS: "{{ application_groups[application_superset_name] | sort | join(',') }}"

  always:
    - name: Remove Group Creation scripts from Staging Area
      ansible.builtin.file:
        path: "{{ stage }}/{{ item }}"
        state: absent
      loop:
        - create_group.sh
        - create_superset_group.sh
