#!/bin/bash

# Add /usr/local/bin to PATH
export PATH=/usr/local/bin:$PATH


# Set AWS region
AWS_REGION="eu-west-2"

# Function to check endpoint and send metric
check_endpoint() {
    endpoint="$1"
    expected_response_code="$2"
    check_domain_ssl_expiry="$3" # true of false

    # Check if the status code is as expected
    start_time=$(date +%s%N)
    http_code=$(curl -s -o /dev/null -w "%{http_code}" "$endpoint" -m 10)
    end_time=$(date +%s%N)

    duration=$(( (end_time - start_time) / 1000000 )) # Convert to milliseconds

    if [ "$http_code" -eq "$expected_code" ]; then
        status=0
        echo "Success: $endpoint returned $http_code (expected $expected_response_code)"
    else
        status=1
        echo "Failure: $endpoint returned $http_code (expected $expected_response_code)"
    fi

    if [ $check_domain_ssl_expiry == "true" ]; then
        # remove https:// from the endpoint or http:// from the endpoint to get the domain name
        endpoint=$(echo $endpoint | sed -e 's/https:\/\///' -e 's/http:\/\///')
        domain_ssl_expiry=$(echo | openssl s_client -servername "$endpoint" -connect "$endpoint":443 2>/dev/null | openssl x509 -noout -dates | grep notAfter | cut -d= -f2)
        domain_ssl_expiry_in_seconds=$(date -d "$domain_ssl_expiry" +%s)
        current_time=$(date +%s)
        check_domain_ssl_expiry=$(( ($domain_ssl_expiry_in_seconds - $current_time) / 86400 ))
        echo "Domain SSL Expiry in days: $check_domain_ssl_expiry"
    else
        check_domain_ssl_expiry=0
    fi

    # Send metrics to CloudWatch
    aws cloudwatch put-metric-data \
        --region "$AWS_REGION" \
        --namespace "CustomMetrics" \
        --metric-data \
        "[
            {
                \"MetricName\": \"EndpointStatus\",
                \"Dimensions\": [{\"Name\": \"Endpoint\",\"Value\": \"$endpoint\"}],
                \"Value\": $status,
                \"Unit\": \"Count\"
            },
            {
                \"MetricName\": \"ResponseTime\",
                \"Dimensions\": [{\"Name\": \"Endpoint\",\"Value\": \"$endpoint\"}],
                \"Value\": $duration,
                \"Unit\": \"Milliseconds\"
            },
            {
                \"MetricName\": \"ResponseCode\",
                \"Dimensions\": [{\"Name\": \"Endpoint\",\"Value\": \"$endpoint\"}],
                \"Value\": $http_code,
                \"Unit\": \"Count\"
            },
            {
                \"MetricName\": \"DomainSSLExpiryInDays\",
                \"Dimensions\": [{\"Name\": \"Endpoint\",\"Value\": \"$endpoint\"}],
                \"Value\": $check_domain_ssl_expiry,
                \"Unit\": \"Count\"
            }
        ]"
}

{% for item in endpoing_monitoring_targets %}
# List of endpoints to check
check_endpoint "{{ item.target }}" "{{ item.expected_response_code }}" "{{ item.check_domain_ssl_expiry }}"
{% endfor %}
