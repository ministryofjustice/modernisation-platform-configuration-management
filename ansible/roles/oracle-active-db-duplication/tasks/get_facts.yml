---
- name: Fail if missing parameters
  fail:
    msg: "Ensure both {{ target_db_name }} variables are defined in db_configs fact"
  when: db_configs[target_db_name] is not defined

- name: Set database facts
  set_fact:
    target_db: "{{ source_db_name }}"
    target_host: "{{ source_host }}"
    auxiliary_db: "{{ db_configs[ target_db_name ] }}"

- name: Debug primary database
  debug:
    var: auxiliary_db

- name: Set SSM parameters path fact from ec2 ssm-parameters-prefix and Name tag
  set_fact:
    ssm_parameters_path: '/{{ ssm_parameters_prefix }}/{{ ec2.tags["Name"] }}'
  when: ssm_parameters_path is not defined

- name: Set SSM parameters database path facts
  set_fact:
    ssm_parameters_path_db_sys_password: "{{ ssm_parameters_path }}/{{ target_db }}/syspassword"

#Â Upload password manually, e.g. aws ssm put-parameter --name "/database/t1-nomis-db-1-b/TRDATT1/syspassword" --type "SecureString" --data-type "text" --value "Password123" --profile nomis-test
- debug:
    msg: "Sys password must be uploaded to {{ ssm_parameters_path_db_sys_password }}"

- name: Get SSM parameters
  set_fact:
    db_sys_password: "{{ lookup('aws_ssm', ssm_parameters_path_db_sys_password, region=ansible_ec2_placement_region) }}"

- name: Check parameters
  set_fact:
    db_all_variables_set: true
  when:
    - db_sys_password|length > 0
    - auxiliary_db.db_name|length > 0
    - auxiliary_db.db_unique_name|length > 0
    - auxiliary_db.instance_name|length > 0
    - auxiliary_db.host_name|length > 0
    - auxiliary_db.port != 0
    - auxiliary_db.tns_name|length > 0
    - auxiliary_db.asm_disk_groups|length > 0
    - target_db|length > 0
    - target_host|length > 0

- name: Fail if missing parameters
  fail:
    msg: Ensure all required parameters are set
  when: not db_all_variables_set|default(false)
