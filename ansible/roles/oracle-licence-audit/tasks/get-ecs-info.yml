- name: Find the latest ecs task definition assigned to the service
  delegate_to: localhost
  become: no
  shell: aws ecs describe-services --services {{ service }} --cluster {{ cluster }} --region {{ region }} | jq -r '.services[].deployments[].taskDefinition'
  register: weblogic_task_definition

- name: Find the vcpu limit for the task definition
  delegate_to: localhost
  become: no
  shell: aws ecs describe-task-definition --task-definition {{ weblogic_task_definition.stdout }} --region {{ region }} | jq -r '.taskDefinition.cpu'
  register: weblogic_vcpu_limit

- name: Find capacity provider for the weblogic service
  delegate_to: localhost
  become: no
  shell: aws ecs describe-services --services {{ service }} --cluster {{ cluster }} --region {{ region }} --output json --query 'services[].capacityProviderStrategy[].capacityProvider'
  register: weblogic_capacity_provider

- name: Find auto scaling group used for the capacity provider
  delegate_to: localhost
  become: no
  shell: aws ecs describe-capacity-providers --capacity-providers {{ weblogic_capacity_provider.stdout }} --region {{ region }} --query capacityProviders[].autoScalingGroupProvider.autoScalingGroupArn --output text | awk -F'/' '{print $NF}'
  register: weblogic_auto_scaling_group

- name: Find instance type used in the auto scaling group
  delegate_to: localhost
  become: no
  shell: aws autoscaling describe-auto-scaling-groups --auto-scaling-group-names {{ weblogic_auto_scaling_group.stdout }} --region {{ region }} | jq -r '.AutoScalingGroups[].Instances[].InstanceType' | uniq
  register: weblogic_instance_type

- name: Find number of vpcu's for {{ weblogic_instance_type.stdout }}
  delegate_to: localhost
  become: no
  shell: aws ec2 describe-instance-types --instance-types {{ weblogic_instance_type.stdout }} --region {{ region }} | jq -r '.InstanceTypes[].VCpuInfo.DefaultVCpus'
  register: weblogic_instance_vcpu_count

- name: Find desired count for weblogic service
  delegate_to: localhost
  become: no
  shell: aws ecs describe-services --services {{ service }} --cluster {{ cluster }} --region {{ region }} | jq -r '.services[].desiredCount'
  register: weblogic_desired_count

- name: Convert the cpu limit to the number of actual vcpu's
  set_fact:
    wcl: "{{ weblogic_vcpu_limit.stdout | int / 1024 }}"
    total_no_vcpus: "{{ weblogic_desired_count.stdout | int * weblogic_vcpu_limit.stdout | int / 1024 }}"

- name: Populate weblogic temporary info dictionary
  set_fact:
    weblogic_temp_info: "{{ weblogic_temp_info | combine( {service: { 'environment': environment_name, 'cluster': cluster, 'instance_type': weblogic_instance_type.stdout, 'instance_type_vcpu_count': weblogic_instance_vcpu_count.stdout | int, 'no_vcpu_core_limit': wcl | int , 'total_no_vcpus': total_no_vcpus | int }} ) }}"
